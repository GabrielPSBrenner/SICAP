//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACESSO.ADMINISTRATIVO.CFabricante {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FABRICANTE", Namespace="http://schemas.datacontract.org/2004/07/ACESSO.MODEL")]
    [System.SerializableAttribute()]
    public partial class FABRICANTE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaCodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaNomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaCodigo {
            get {
                return this.FaCodigoField;
            }
            set {
                if ((this.FaCodigoField.Equals(value) != true)) {
                    this.FaCodigoField = value;
                    this.RaisePropertyChanged("FaCodigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaNome {
            get {
                return this.FaNomeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaNomeField, value) != true)) {
                    this.FaNomeField = value;
                    this.RaisePropertyChanged("FaNome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CFabricante.ICFabricante")]
    public interface ICFabricante {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFabricante/ListarTodosFabricantes", ReplyAction="http://tempuri.org/ICFabricante/ListarTodosFabricantesResponse")]
        ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE[] ListarTodosFabricantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFabricante/SelecionaPKFabricante", ReplyAction="http://tempuri.org/ICFabricante/SelecionaPKFabricanteResponse")]
        ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE SelecionaPKFabricante(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFabricante/Incluir", ReplyAction="http://tempuri.org/ICFabricante/IncluirResponse")]
        void Incluir(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFabricante/Alterar", ReplyAction="http://tempuri.org/ICFabricante/AlterarResponse")]
        void Alterar(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFabricante/Excluir", ReplyAction="http://tempuri.org/ICFabricante/ExcluirResponse")]
        void Excluir(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICFabricanteChannel : ACESSO.ADMINISTRATIVO.CFabricante.ICFabricante, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CFabricanteClient : System.ServiceModel.ClientBase<ACESSO.ADMINISTRATIVO.CFabricante.ICFabricante>, ACESSO.ADMINISTRATIVO.CFabricante.ICFabricante {
        
        public CFabricanteClient() {
        }
        
        public CFabricanteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CFabricanteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CFabricanteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CFabricanteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE[] ListarTodosFabricantes() {
            return base.Channel.ListarTodosFabricantes();
        }
        
        public ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE SelecionaPKFabricante(int Codigo) {
            return base.Channel.SelecionaPKFabricante(Codigo);
        }
        
        public void Incluir(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE) {
            base.Channel.Incluir(oFABRICANTE);
        }
        
        public void Alterar(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE) {
            base.Channel.Alterar(oFABRICANTE);
        }
        
        public void Excluir(ACESSO.ADMINISTRATIVO.CFabricante.FABRICANTE oFABRICANTE) {
            base.Channel.Excluir(oFABRICANTE);
        }
    }
}
