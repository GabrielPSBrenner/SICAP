//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACESSO.ADMINISTRATIVO.CEquipamento {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EQUIPAMENTO", Namespace="http://schemas.datacontract.org/2004/07/ACESSO.MODEL")]
    [System.SerializableAttribute()]
    public partial class EQUIPAMENTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EqBloqueadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EqCodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqNomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqTAGRFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EqTempoSinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EqTipoEquipamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char EqTipoLiberaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaCodigoFabricanteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EqBloqueado {
            get {
                return this.EqBloqueadoField;
            }
            set {
                if ((this.EqBloqueadoField.Equals(value) != true)) {
                    this.EqBloqueadoField = value;
                    this.RaisePropertyChanged("EqBloqueado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EqCodigo {
            get {
                return this.EqCodigoField;
            }
            set {
                if ((this.EqCodigoField.Equals(value) != true)) {
                    this.EqCodigoField = value;
                    this.RaisePropertyChanged("EqCodigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqNome {
            get {
                return this.EqNomeField;
            }
            set {
                if ((object.ReferenceEquals(this.EqNomeField, value) != true)) {
                    this.EqNomeField = value;
                    this.RaisePropertyChanged("EqNome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqTAGRFID {
            get {
                return this.EqTAGRFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EqTAGRFIDField, value) != true)) {
                    this.EqTAGRFIDField = value;
                    this.RaisePropertyChanged("EqTAGRFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EqTempoSinal {
            get {
                return this.EqTempoSinalField;
            }
            set {
                if ((this.EqTempoSinalField.Equals(value) != true)) {
                    this.EqTempoSinalField = value;
                    this.RaisePropertyChanged("EqTempoSinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EqTipoEquipamento {
            get {
                return this.EqTipoEquipamentoField;
            }
            set {
                if ((this.EqTipoEquipamentoField.Equals(value) != true)) {
                    this.EqTipoEquipamentoField = value;
                    this.RaisePropertyChanged("EqTipoEquipamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char EqTipoLibera {
            get {
                return this.EqTipoLiberaField;
            }
            set {
                if ((this.EqTipoLiberaField.Equals(value) != true)) {
                    this.EqTipoLiberaField = value;
                    this.RaisePropertyChanged("EqTipoLibera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaCodigoFabricante {
            get {
                return this.FaCodigoFabricanteField;
            }
            set {
                if ((this.FaCodigoFabricanteField.Equals(value) != true)) {
                    this.FaCodigoFabricanteField = value;
                    this.RaisePropertyChanged("FaCodigoFabricante");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TIPOEQUIPAMENTO", Namespace="http://schemas.datacontract.org/2004/07/ACESSO.MODEL")]
    [System.SerializableAttribute()]
    public partial class TIPOEQUIPAMENTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TECodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TEDescricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TEEPIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TECodigo {
            get {
                return this.TECodigoField;
            }
            set {
                if ((this.TECodigoField.Equals(value) != true)) {
                    this.TECodigoField = value;
                    this.RaisePropertyChanged("TECodigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TEDescricao {
            get {
                return this.TEDescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.TEDescricaoField, value) != true)) {
                    this.TEDescricaoField = value;
                    this.RaisePropertyChanged("TEDescricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TEEPI {
            get {
                return this.TEEPIField;
            }
            set {
                if ((this.TEEPIField.Equals(value) != true)) {
                    this.TEEPIField = value;
                    this.RaisePropertyChanged("TEEPI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FABRICANTE", Namespace="http://schemas.datacontract.org/2004/07/ACESSO.MODEL")]
    [System.SerializableAttribute()]
    public partial class FABRICANTE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaCodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaNomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaCodigo {
            get {
                return this.FaCodigoField;
            }
            set {
                if ((this.FaCodigoField.Equals(value) != true)) {
                    this.FaCodigoField = value;
                    this.RaisePropertyChanged("FaCodigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaNome {
            get {
                return this.FaNomeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaNomeField, value) != true)) {
                    this.FaNomeField = value;
                    this.RaisePropertyChanged("FaNome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CEquipamento.ICEquipamento")]
    public interface ICEquipamento {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/ListarEquipamentosTipo", ReplyAction="http://tempuri.org/ICEquipamento/ListarEquipamentosTipoResponse")]
        ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO[] ListarEquipamentosTipo(int CodigoTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/ListarTiposEquipamentos", ReplyAction="http://tempuri.org/ICEquipamento/ListarTiposEquipamentosResponse")]
        ACESSO.ADMINISTRATIVO.CEquipamento.TIPOEQUIPAMENTO[] ListarTiposEquipamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/ListarFabricantes", ReplyAction="http://tempuri.org/ICEquipamento/ListarFabricantesResponse")]
        ACESSO.ADMINISTRATIVO.CEquipamento.FABRICANTE[] ListarFabricantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/SelecionaEquipamento", ReplyAction="http://tempuri.org/ICEquipamento/SelecionaEquipamentoResponse")]
        ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO SelecionaEquipamento(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/Incluir", ReplyAction="http://tempuri.org/ICEquipamento/IncluirResponse")]
        void Incluir(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/Alterar", ReplyAction="http://tempuri.org/ICEquipamento/AlterarResponse")]
        void Alterar(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/Excluir", ReplyAction="http://tempuri.org/ICEquipamento/ExcluirResponse")]
        void Excluir(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEquipamento/SelecionaFabricante", ReplyAction="http://tempuri.org/ICEquipamento/SelecionaFabricanteResponse")]
        ACESSO.ADMINISTRATIVO.CEquipamento.FABRICANTE SelecionaFabricante(int Codigo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICEquipamentoChannel : ACESSO.ADMINISTRATIVO.CEquipamento.ICEquipamento, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CEquipamentoClient : System.ServiceModel.ClientBase<ACESSO.ADMINISTRATIVO.CEquipamento.ICEquipamento>, ACESSO.ADMINISTRATIVO.CEquipamento.ICEquipamento {
        
        public CEquipamentoClient() {
        }
        
        public CEquipamentoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CEquipamentoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CEquipamentoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CEquipamentoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO[] ListarEquipamentosTipo(int CodigoTipo) {
            return base.Channel.ListarEquipamentosTipo(CodigoTipo);
        }
        
        public ACESSO.ADMINISTRATIVO.CEquipamento.TIPOEQUIPAMENTO[] ListarTiposEquipamentos() {
            return base.Channel.ListarTiposEquipamentos();
        }
        
        public ACESSO.ADMINISTRATIVO.CEquipamento.FABRICANTE[] ListarFabricantes() {
            return base.Channel.ListarFabricantes();
        }
        
        public ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO SelecionaEquipamento(int Codigo) {
            return base.Channel.SelecionaEquipamento(Codigo);
        }
        
        public void Incluir(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento) {
            base.Channel.Incluir(oEquipamento);
        }
        
        public void Alterar(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento) {
            base.Channel.Alterar(oEquipamento);
        }
        
        public void Excluir(ACESSO.ADMINISTRATIVO.CEquipamento.EQUIPAMENTO oEquipamento) {
            base.Channel.Excluir(oEquipamento);
        }
        
        public ACESSO.ADMINISTRATIVO.CEquipamento.FABRICANTE SelecionaFabricante(int Codigo) {
            return base.Channel.SelecionaFabricante(Codigo);
        }
    }
}
