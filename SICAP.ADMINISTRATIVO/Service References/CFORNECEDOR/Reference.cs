//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACESSO.ADMINISTRATIVO.CFORNECEDOR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FORNECEDOR", Namespace="http://schemas.datacontract.org/2004/07/ACESSO.MODEL")]
    [System.SerializableAttribute()]
    public partial class FORNECEDOR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOCNPJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FONomeFantasiaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FORazaoSocialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOCNPJ {
            get {
                return this.FOCNPJField;
            }
            set {
                if ((object.ReferenceEquals(this.FOCNPJField, value) != true)) {
                    this.FOCNPJField = value;
                    this.RaisePropertyChanged("FOCNPJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FONomeFantasia {
            get {
                return this.FONomeFantasiaField;
            }
            set {
                if ((object.ReferenceEquals(this.FONomeFantasiaField, value) != true)) {
                    this.FONomeFantasiaField = value;
                    this.RaisePropertyChanged("FONomeFantasia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORazaoSocial {
            get {
                return this.FORazaoSocialField;
            }
            set {
                if ((object.ReferenceEquals(this.FORazaoSocialField, value) != true)) {
                    this.FORazaoSocialField = value;
                    this.RaisePropertyChanged("FORazaoSocial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CFORNECEDOR.ICFORNECEDOR")]
    public interface ICFORNECEDOR {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFORNECEDOR/ListarTodosFornecedores", ReplyAction="http://tempuri.org/ICFORNECEDOR/ListarTodosFornecedoresResponse")]
        ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR[] ListarTodosFornecedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFORNECEDOR/SelecionaPKFornecedor", ReplyAction="http://tempuri.org/ICFORNECEDOR/SelecionaPKFornecedorResponse")]
        ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR SelecionaPKFornecedor(string Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFORNECEDOR/Incluir", ReplyAction="http://tempuri.org/ICFORNECEDOR/IncluirResponse")]
        void Incluir(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFORNECEDOR/Alterar", ReplyAction="http://tempuri.org/ICFORNECEDOR/AlterarResponse")]
        void Alterar(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICFORNECEDOR/Excluir", ReplyAction="http://tempuri.org/ICFORNECEDOR/ExcluirResponse")]
        void Excluir(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICFORNECEDORChannel : ACESSO.ADMINISTRATIVO.CFORNECEDOR.ICFORNECEDOR, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CFORNECEDORClient : System.ServiceModel.ClientBase<ACESSO.ADMINISTRATIVO.CFORNECEDOR.ICFORNECEDOR>, ACESSO.ADMINISTRATIVO.CFORNECEDOR.ICFORNECEDOR {
        
        public CFORNECEDORClient() {
        }
        
        public CFORNECEDORClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CFORNECEDORClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CFORNECEDORClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CFORNECEDORClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR[] ListarTodosFornecedores() {
            return base.Channel.ListarTodosFornecedores();
        }
        
        public ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR SelecionaPKFornecedor(string Codigo) {
            return base.Channel.SelecionaPKFornecedor(Codigo);
        }
        
        public void Incluir(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR) {
            base.Channel.Incluir(oFORNECEDOR);
        }
        
        public void Alterar(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR) {
            base.Channel.Alterar(oFORNECEDOR);
        }
        
        public void Excluir(ACESSO.ADMINISTRATIVO.CFORNECEDOR.FORNECEDOR oFORNECEDOR) {
            base.Channel.Excluir(oFORNECEDOR);
        }
    }
}
